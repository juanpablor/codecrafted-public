{"version":3,"file":"component---src-pages-blog-tsx-fad31c1db95709ab8231.js","mappings":"sLAgGA,MAAMA,E,QAAgBC,GAkDtB,UAhD+NC,IAAc,IAAb,KAAED,GAAMC,EACtO,MAAMC,EAAQF,EAAKG,aAAeH,EAAKG,aAAaC,MAAQ,GAE5D,OAAqB,IAAjBF,EAAMG,OAENC,EAAAA,cAACC,EAAAA,QAAM,KACLD,EAAAA,cAAA,WAAK,mBAMTA,EAAAA,cAACC,EAAAA,QAAM,CAACP,KAAMD,GACZO,EAAAA,cAAA,UACGJ,EAAMM,KAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAClBH,EAAAA,cAAA,MAAIK,IAAKD,EAAKE,MACZN,EAAAA,cAACO,EAAAA,EAAI,CAACC,MAAOJ,EAAKI,MAAOC,KAAML,EAAKK,KAAMC,QAASN,EAAKM,QAASJ,KAAMF,EAAKE,OACzE,KAGF,C","sources":["webpack://corpo-code-crafted-studios/./src/pages/blog.tsx"],"sourcesContent":["// import React from \"react\";\n// import { graphql, Link } from \"gatsby\";\n// import { useTranslation } from \"react-i18next\";\n// import Layout from \"./layout\";\n// import { Post, Company } from \"../interfaces\";\n// import data from \"../data/data.json\";\n// import { format } from \"date-fns\";\n// import { es, fr, enUS, sl } from \"date-fns/locale\";\n// import images from \"../images\";\n\n// const info: Company = data[0];\n\n// type Props = {\n//   data: {\n//     allPostsJson: {\n//       nodes: Post[];\n//     };\n//   };\n// };\n\n// const PostPage: React.FC<Props> = ({ data }) => {\n//   const posts = data.allPostsJson.nodes;\n\n//   const { t, i18n } = useTranslation();\n//   const getLocale = (language: string) => {\n//     switch (language) {\n//       case \"es\":\n//         return es;\n//       case \"fr\":\n//         return fr;\n//       default:\n//         return enUS;\n//     }\n//   };\n\n//   return (\n//     <Layout data={info}>\n//       <h1 className=\"text-3xl text-center my-4\">{t(\"blog.title\")}</h1>\n//       <ul className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n//         {posts.map((post) => (\n//           <li\n//             className=\"text-center border-2 bg-darkBg/50 rounded-lg p-2 flex-1 flex flex-col\"\n//             key={post.slug}\n//           >\n//             <Link to={`/blog/${post.slug}`}>\n//               <h2>{t(`blog.${post.slug}-title`)}</h2>\n//               <p className=\"text-sm text-secondary\">\n//                 {format(new Date(post.date), \"MMMM dd, yyyy\", {\n//                   locale: getLocale(i18n.language),\n//                 })}\n//               </p>\n//               <img\n//                 className=\"thumbnail mx-auto my-4\"\n//                 src={images[post.slug as keyof typeof images].src}\n//                 alt={images[post.slug as keyof typeof images].alt}\n//               />\n//             </Link>\n//           </li>\n//         ))}\n//       </ul>\n//     </Layout>\n//   );\n// };\n\n// export const query = graphql`\n//   query ($language: String!) {\n//     locales: allLocale(filter: { language: { eq: $language } }) {\n//       edges {\n//         node {\n//           ns\n//           data\n//           language\n//         }\n//       }\n//     }\n//     allPostsJson {\n//       nodes {\n//         title\n//         slug\n//         date\n//       }\n//     }\n//   }\n// `;\n\n// export default PostPage;\n\n\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from './layout';\nimport Post from '../components/Blog';\nimport { PageProps } from 'gatsby';\nimport { Company } from \"../interfaces\";\nimport data from \"../data/data.json\";\n\nconst info: Company = data[0];\n\nconst BlogPage: React.FC<PageProps<{ allPostsJson: { edges: { node: { title: string; date: string; content: string; slug: string } }[] }, locales: { edges: { node: { ns: string; data: string; language: string } }[] } }>> = ({ data }) => {\n  const posts = data.allPostsJson ? data.allPostsJson.edges : [];\n\n  if (posts.length === 0) {\n    return (\n      <Layout>\n        <div>No posts found</div>\n      </Layout>\n    );\n  }\n\n  return (\n    <Layout data={info}>\n      <ul>\n        {posts.map(({ node }) => (\n          <li key={node.slug}>\n            <Post title={node.title} date={node.date} content={node.content} slug={node.slug} />\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query BlogPageQuery($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n    allPostsJson {\n      edges {\n        node {\n          title\n          date\n          content\n          slug\n        }\n      }\n    }\n  }\n`;\n\nexport default BlogPage;"],"names":["info","data","_ref","posts","allPostsJson","edges","length","React","Layout","map","_ref2","node","key","slug","Post","title","date","content"],"sourceRoot":""}